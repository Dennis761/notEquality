#6
n = int(input("Введіть своє ціле натуральне число : "))
x = 0
y = 0
get_result = 0
while x**2 + y**2 < n : #1
    while x**2 + y**2 < n : #2
        get_result += 1
        y += 1
    x += 1
    y = 0
print("Кількість розв'язків вашої нерівності : " + str(get_result))
#1. Спочатку вводимо змінну "n" - це буде ціле число яке задасть користувач, за
# допомогою функції input ми отримуємо це значення у формі стрічки, але
# для подальшого опрацювання нам потрібно перетворити цю стрічку в число,
# отже нам потрібно використати функцію int. Потім ми вводимо нові зміні 
# "x", "y", "get_result", де "x" та "y" - цілі додатні числа, сумми квадратів цих чисел належать
# проміжку [0;n) та утворюють пару (x,y), також є змінна 
# "get_result" - це сума квадратів тих пар, які задовільняють нашу нерівністі
#2.1 У першому циклі while ми інкрементуємо змінну "x" і дивимося після цього чи вона задовільняє 
# нерівність, яку ми задаємо як умову в другому циклі. Переконавшись, що нерівність поверне
# нам значення true, ми інкрементуєм ще на одиницю значення "y" та "get_result", інкрементація
# буде повторюватися до тих пір до поки другий цикл while не поверне значення false,
# і в кінці першої ітерації у першому циклі ми надаємо змінній "у" нове значення - 1
# 2.2 Ітерація по першому циклу буде відбуватися до тих пір до поки перший цикл while 
# не поверне значення false. Коли перший цикл поверне значення false, тоді змінна
# "get_result" отримає кількість усіх можливих розв'язків, які задовільняють нашу нерівність
#3. В кінці за допомогою функції функції str ми приводимо змінну "get_result" до стрічки
# і конкатуємо з попередньою стрічкою, результат виводимо за допомогою функції print()
# Висновок : за допомогою цієї задачі я покращив свої навички у використовувані циклів,
# а також у використані функцій, сподіваюсь ці знання знадобляться мені у недалекому майбутньому.